//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""gameplay"",
            ""id"": ""a3c72189-a6bf-489a-9c02-ff4a435668c4"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""91946ff4-3fc6-42e7-b66c-4a5d89629f7c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ItemMainAction"",
                    ""type"": ""Button"",
                    ""id"": ""de7b94f2-ba61-4527-b3ea-f891210b09e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ItemMinorAction1"",
                    ""type"": ""Button"",
                    ""id"": ""90c62d8a-b020-43d8-9d3b-85e5da049994"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ItemMinorAction2"",
                    ""type"": ""Button"",
                    ""id"": ""70cbedaa-8a66-490f-bb7e-15f689a28936"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ItemMinorAction3"",
                    ""type"": ""Button"",
                    ""id"": ""9ef9df4d-cac7-4933-92c1-83365416d895"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchItems"",
                    ""type"": ""Value"",
                    ""id"": ""1fff355c-f14c-40b4-89ee-e99c280ded12"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d3744133-7059-4f6a-8a1f-a47787bad00f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5fdc9d8b-3b19-4e0e-b39a-38934841c4ab"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c3414a30-e8e6-4122-a6f4-67b90fff0f99"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3b1c1ac2-a209-46e5-93d3-458a1582aeb7"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""89e39586-21ed-49d3-8706-682b08329a8f"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c7aeb8b1-1433-4e53-bc0d-d4cb3d2a3797"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8f5d821e-0577-4be1-9e97-ab0d933d9225"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8fcab955-a7d9-45d6-ac2d-83597c3edcae"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ff07a772-8d72-41c7-978b-663d9945c68e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4b5a808e-b15e-4be5-aac4-e4a9ff0c46da"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ce189646-480f-4c4e-89ba-b213166b4c33"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemMainAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45db908c-f178-427f-bd0e-1910af07bfb4"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemMainAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e5ae820-6db2-48f0-b317-ac4f3728f75b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemMinorAction1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43cdfcdd-ff04-4870-86fb-f30085e034da"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemMinorAction1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8107b91b-1001-4a7f-a817-753e1320fc49"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemMinorAction2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c70df0d-4cad-42c5-a648-a0be7cbda5df"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemMinorAction2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5459673-1753-40be-841b-29dd2fb86222"",
                    ""path"": ""<Mouse>/backButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemMinorAction3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc53b3c2-4cb7-441c-a8b4-55a80e912c65"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemMinorAction3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f43038c-660b-45be-b316-c4afc438a245"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchItems"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""5822bc84-c792-49a1-a296-b0aab02c2ea6"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchItems"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""fca94cf2-662a-455c-ac4b-818e669f171d"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchItems"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a3019e9d-daf8-40c5-8b17-acf017ded218"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchItems"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // gameplay
        m_gameplay = asset.FindActionMap("gameplay", throwIfNotFound: true);
        m_gameplay_Move = m_gameplay.FindAction("Move", throwIfNotFound: true);
        m_gameplay_ItemMainAction = m_gameplay.FindAction("ItemMainAction", throwIfNotFound: true);
        m_gameplay_ItemMinorAction1 = m_gameplay.FindAction("ItemMinorAction1", throwIfNotFound: true);
        m_gameplay_ItemMinorAction2 = m_gameplay.FindAction("ItemMinorAction2", throwIfNotFound: true);
        m_gameplay_ItemMinorAction3 = m_gameplay.FindAction("ItemMinorAction3", throwIfNotFound: true);
        m_gameplay_SwitchItems = m_gameplay.FindAction("SwitchItems", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // gameplay
    private readonly InputActionMap m_gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_gameplay_Move;
    private readonly InputAction m_gameplay_ItemMainAction;
    private readonly InputAction m_gameplay_ItemMinorAction1;
    private readonly InputAction m_gameplay_ItemMinorAction2;
    private readonly InputAction m_gameplay_ItemMinorAction3;
    private readonly InputAction m_gameplay_SwitchItems;
    public struct GameplayActions
    {
        private @Controls m_Wrapper;
        public GameplayActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_gameplay_Move;
        public InputAction @ItemMainAction => m_Wrapper.m_gameplay_ItemMainAction;
        public InputAction @ItemMinorAction1 => m_Wrapper.m_gameplay_ItemMinorAction1;
        public InputAction @ItemMinorAction2 => m_Wrapper.m_gameplay_ItemMinorAction2;
        public InputAction @ItemMinorAction3 => m_Wrapper.m_gameplay_ItemMinorAction3;
        public InputAction @SwitchItems => m_Wrapper.m_gameplay_SwitchItems;
        public InputActionMap Get() { return m_Wrapper.m_gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @ItemMainAction.started += instance.OnItemMainAction;
            @ItemMainAction.performed += instance.OnItemMainAction;
            @ItemMainAction.canceled += instance.OnItemMainAction;
            @ItemMinorAction1.started += instance.OnItemMinorAction1;
            @ItemMinorAction1.performed += instance.OnItemMinorAction1;
            @ItemMinorAction1.canceled += instance.OnItemMinorAction1;
            @ItemMinorAction2.started += instance.OnItemMinorAction2;
            @ItemMinorAction2.performed += instance.OnItemMinorAction2;
            @ItemMinorAction2.canceled += instance.OnItemMinorAction2;
            @ItemMinorAction3.started += instance.OnItemMinorAction3;
            @ItemMinorAction3.performed += instance.OnItemMinorAction3;
            @ItemMinorAction3.canceled += instance.OnItemMinorAction3;
            @SwitchItems.started += instance.OnSwitchItems;
            @SwitchItems.performed += instance.OnSwitchItems;
            @SwitchItems.canceled += instance.OnSwitchItems;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @ItemMainAction.started -= instance.OnItemMainAction;
            @ItemMainAction.performed -= instance.OnItemMainAction;
            @ItemMainAction.canceled -= instance.OnItemMainAction;
            @ItemMinorAction1.started -= instance.OnItemMinorAction1;
            @ItemMinorAction1.performed -= instance.OnItemMinorAction1;
            @ItemMinorAction1.canceled -= instance.OnItemMinorAction1;
            @ItemMinorAction2.started -= instance.OnItemMinorAction2;
            @ItemMinorAction2.performed -= instance.OnItemMinorAction2;
            @ItemMinorAction2.canceled -= instance.OnItemMinorAction2;
            @ItemMinorAction3.started -= instance.OnItemMinorAction3;
            @ItemMinorAction3.performed -= instance.OnItemMinorAction3;
            @ItemMinorAction3.canceled -= instance.OnItemMinorAction3;
            @SwitchItems.started -= instance.OnSwitchItems;
            @SwitchItems.performed -= instance.OnSwitchItems;
            @SwitchItems.canceled -= instance.OnSwitchItems;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnItemMainAction(InputAction.CallbackContext context);
        void OnItemMinorAction1(InputAction.CallbackContext context);
        void OnItemMinorAction2(InputAction.CallbackContext context);
        void OnItemMinorAction3(InputAction.CallbackContext context);
        void OnSwitchItems(InputAction.CallbackContext context);
    }
}
